#Synchronized 属于悲观锁

java锁分类

1.乐观锁
定义：认为所有的数据都是读多写少，在进行一个数据修改时，
认为其他人不会修改，所以不会上锁。
但是在进行数据修改时会进行判断在这个期间有没有人对这个数据进行了修改，
会先拿到版本号和这个数据的版本号进行比较，如果版本号一致则进行修改，
如果不一致则会进行重复读取-比较-写的操作中。
java乐观锁一般都是通过CAS进行实现的。CAS是更新的一种原子操作，比较当前值和传入值是否一样，
一样就更新。否则就失败。

2.悲观锁
定义：认为所有数据会被其他人进行修改，所以在获取数据的时候，会上锁。别人读取这个数据就会是block，只到拿到锁。
悲观锁就是Synchronized,在AQS框架下的锁是先通过CAS尝试获取锁，获取不到，就会进行转换为悲观锁。
如：RetreenLock.

3.自旋锁
定义：在数据被锁定情况下，其他用户进行获取数据，处于block,在内核和用户之间进行阻塞挂起状态。在有索的线程释放后，即可立即
获取锁资源。